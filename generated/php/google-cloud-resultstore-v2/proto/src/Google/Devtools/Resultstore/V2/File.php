<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/resultstore/v2/file.proto

namespace Google\Devtools\Resultstore\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The metadata for a file or an archive file entry.
 *
 * Generated from protobuf message <code>google.devtools.resultstore.v2.File</code>
 */
class File extends \Google\Protobuf\Internal\Message
{
    /**
     * The identifier of the file or archive entry.
     * User-provided, must be unique for the repeated field it is in. When an
     * Append RPC is called with a Files field populated, if a File already exists
     * with this ID, that File will be overwritten with the new File proto.
     *
     * Generated from protobuf field <code>string uid = 1;</code>
     */
    private $uid = '';
    /**
     * The URI of a file.
     * This could also be the URI of an entire archive.
     * Most log data doesn't need to be stored forever, so a ttl is suggested.
     * Note that if you ever move or delete the file at this URI, the link from
     * the server will be broken.
     *
     * Generated from protobuf field <code>string uri = 2;</code>
     */
    private $uri = '';
    /**
     * (Optional) The length of the file in bytes.  Allows the filesize to be
     * shown in the UI.  Omit if file is still being written or length is
     * not known.  This could also be the length of an entire archive.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value length = 3;</code>
     */
    private $length = null;
    /**
     * (Optional) The content-type (aka MIME-type) of the file.  This is sent to
     * the web browser so it knows how to handle the file. (e.g. text/plain,
     * image/jpeg, text/html, etc). For zip archives, use "application/zip".
     *
     * Generated from protobuf field <code>string content_type = 4;</code>
     */
    private $content_type = '';
    /**
     * (Optional) If the above path, length, and content_type are referring to an
     * archive, and you wish to refer to a particular entry within that archive,
     * put the particular archive entry data here.
     *
     * Generated from protobuf field <code>.google.devtools.resultstore.v2.ArchiveEntry archive_entry = 5;</code>
     */
    private $archive_entry = null;
    /**
     * (Optional) A url to a content display app/site for this file or archive
     * entry.
     *
     * Generated from protobuf field <code>string content_viewer = 6;</code>
     */
    private $content_viewer = '';
    /**
     * (Optional) Whether to hide this file or archive entry in the UI.  Defaults
     * to false. A checkbox lets users see hidden files, but they're hidden by
     * default.
     *
     * Generated from protobuf field <code>bool hidden = 7;</code>
     */
    private $hidden = false;
    /**
     * (Optional) A short description of what this file or archive entry
     * contains. This description should help someone viewing the list of these
     * files to understand the purpose of this file and what they would want to
     * view it for.
     *
     * Generated from protobuf field <code>string description = 8;</code>
     */
    private $description = '';

    public function __construct() {
        \GPBMetadata\Google\Devtools\Resultstore\V2\File::initOnce();
        parent::__construct();
    }

    /**
     * The identifier of the file or archive entry.
     * User-provided, must be unique for the repeated field it is in. When an
     * Append RPC is called with a Files field populated, if a File already exists
     * with this ID, that File will be overwritten with the new File proto.
     *
     * Generated from protobuf field <code>string uid = 1;</code>
     * @return string
     */
    public function getUid()
    {
        return $this->uid;
    }

    /**
     * The identifier of the file or archive entry.
     * User-provided, must be unique for the repeated field it is in. When an
     * Append RPC is called with a Files field populated, if a File already exists
     * with this ID, that File will be overwritten with the new File proto.
     *
     * Generated from protobuf field <code>string uid = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setUid($var)
    {
        GPBUtil::checkString($var, True);
        $this->uid = $var;

        return $this;
    }

    /**
     * The URI of a file.
     * This could also be the URI of an entire archive.
     * Most log data doesn't need to be stored forever, so a ttl is suggested.
     * Note that if you ever move or delete the file at this URI, the link from
     * the server will be broken.
     *
     * Generated from protobuf field <code>string uri = 2;</code>
     * @return string
     */
    public function getUri()
    {
        return $this->uri;
    }

    /**
     * The URI of a file.
     * This could also be the URI of an entire archive.
     * Most log data doesn't need to be stored forever, so a ttl is suggested.
     * Note that if you ever move or delete the file at this URI, the link from
     * the server will be broken.
     *
     * Generated from protobuf field <code>string uri = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setUri($var)
    {
        GPBUtil::checkString($var, True);
        $this->uri = $var;

        return $this;
    }

    /**
     * (Optional) The length of the file in bytes.  Allows the filesize to be
     * shown in the UI.  Omit if file is still being written or length is
     * not known.  This could also be the length of an entire archive.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value length = 3;</code>
     * @return \Google\Protobuf\Int64Value
     */
    public function getLength()
    {
        return $this->length;
    }

    /**
     * (Optional) The length of the file in bytes.  Allows the filesize to be
     * shown in the UI.  Omit if file is still being written or length is
     * not known.  This could also be the length of an entire archive.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value length = 3;</code>
     * @param \Google\Protobuf\Int64Value $var
     * @return $this
     */
    public function setLength($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Int64Value::class);
        $this->length = $var;

        return $this;
    }

    /**
     * (Optional) The content-type (aka MIME-type) of the file.  This is sent to
     * the web browser so it knows how to handle the file. (e.g. text/plain,
     * image/jpeg, text/html, etc). For zip archives, use "application/zip".
     *
     * Generated from protobuf field <code>string content_type = 4;</code>
     * @return string
     */
    public function getContentType()
    {
        return $this->content_type;
    }

    /**
     * (Optional) The content-type (aka MIME-type) of the file.  This is sent to
     * the web browser so it knows how to handle the file. (e.g. text/plain,
     * image/jpeg, text/html, etc). For zip archives, use "application/zip".
     *
     * Generated from protobuf field <code>string content_type = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setContentType($var)
    {
        GPBUtil::checkString($var, True);
        $this->content_type = $var;

        return $this;
    }

    /**
     * (Optional) If the above path, length, and content_type are referring to an
     * archive, and you wish to refer to a particular entry within that archive,
     * put the particular archive entry data here.
     *
     * Generated from protobuf field <code>.google.devtools.resultstore.v2.ArchiveEntry archive_entry = 5;</code>
     * @return \Google\Devtools\Resultstore\V2\ArchiveEntry
     */
    public function getArchiveEntry()
    {
        return $this->archive_entry;
    }

    /**
     * (Optional) If the above path, length, and content_type are referring to an
     * archive, and you wish to refer to a particular entry within that archive,
     * put the particular archive entry data here.
     *
     * Generated from protobuf field <code>.google.devtools.resultstore.v2.ArchiveEntry archive_entry = 5;</code>
     * @param \Google\Devtools\Resultstore\V2\ArchiveEntry $var
     * @return $this
     */
    public function setArchiveEntry($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Resultstore\V2\ArchiveEntry::class);
        $this->archive_entry = $var;

        return $this;
    }

    /**
     * (Optional) A url to a content display app/site for this file or archive
     * entry.
     *
     * Generated from protobuf field <code>string content_viewer = 6;</code>
     * @return string
     */
    public function getContentViewer()
    {
        return $this->content_viewer;
    }

    /**
     * (Optional) A url to a content display app/site for this file or archive
     * entry.
     *
     * Generated from protobuf field <code>string content_viewer = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setContentViewer($var)
    {
        GPBUtil::checkString($var, True);
        $this->content_viewer = $var;

        return $this;
    }

    /**
     * (Optional) Whether to hide this file or archive entry in the UI.  Defaults
     * to false. A checkbox lets users see hidden files, but they're hidden by
     * default.
     *
     * Generated from protobuf field <code>bool hidden = 7;</code>
     * @return bool
     */
    public function getHidden()
    {
        return $this->hidden;
    }

    /**
     * (Optional) Whether to hide this file or archive entry in the UI.  Defaults
     * to false. A checkbox lets users see hidden files, but they're hidden by
     * default.
     *
     * Generated from protobuf field <code>bool hidden = 7;</code>
     * @param bool $var
     * @return $this
     */
    public function setHidden($var)
    {
        GPBUtil::checkBool($var);
        $this->hidden = $var;

        return $this;
    }

    /**
     * (Optional) A short description of what this file or archive entry
     * contains. This description should help someone viewing the list of these
     * files to understand the purpose of this file and what they would want to
     * view it for.
     *
     * Generated from protobuf field <code>string description = 8;</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * (Optional) A short description of what this file or archive entry
     * contains. This description should help someone viewing the list of these
     * files to understand the purpose of this file and what they would want to
     * view it for.
     *
     * Generated from protobuf field <code>string description = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

}

