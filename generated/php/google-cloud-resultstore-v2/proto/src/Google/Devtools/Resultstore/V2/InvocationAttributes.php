<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/resultstore/v2/invocation.proto

namespace Google\Devtools\Resultstore\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Attributes that apply to all invocations.
 *
 * Generated from protobuf message <code>google.devtools.resultstore.v2.InvocationAttributes</code>
 */
class InvocationAttributes extends \Google\Protobuf\Internal\Message
{
    /**
     * The project ID this invocation is associated with. This must be
     * set in the CreateInvocation call, and can't be changed.
     *
     * Generated from protobuf field <code>string project_id = 1;</code>
     */
    private $project_id = '';
    /**
     * The list of users in the command chain.  The first user in this sequence
     * is the one who instigated the first command in the chain.
     *
     * Generated from protobuf field <code>repeated string users = 2;</code>
     */
    private $users;
    /**
     * Labels to categorize this invocation.
     * This is implemented as a set. All labels will be unique. Any duplicate
     * labels added will be ignored. Labels will be returned in lexicographical
     * order. Labels should be short, easy to read, and you
     * shouldn't have more than a handful.
     * Labels should match regex \w([- \w]*\w)?
     * Labels should not be used for unique properties such as unique IDs.
     * Use properties in cases that don't meet these conditions.
     *
     * Generated from protobuf field <code>repeated string labels = 3;</code>
     */
    private $labels;

    public function __construct() {
        \GPBMetadata\Google\Devtools\Resultstore\V2\Invocation::initOnce();
        parent::__construct();
    }

    /**
     * The project ID this invocation is associated with. This must be
     * set in the CreateInvocation call, and can't be changed.
     *
     * Generated from protobuf field <code>string project_id = 1;</code>
     * @return string
     */
    public function getProjectId()
    {
        return $this->project_id;
    }

    /**
     * The project ID this invocation is associated with. This must be
     * set in the CreateInvocation call, and can't be changed.
     *
     * Generated from protobuf field <code>string project_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setProjectId($var)
    {
        GPBUtil::checkString($var, True);
        $this->project_id = $var;

        return $this;
    }

    /**
     * The list of users in the command chain.  The first user in this sequence
     * is the one who instigated the first command in the chain.
     *
     * Generated from protobuf field <code>repeated string users = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getUsers()
    {
        return $this->users;
    }

    /**
     * The list of users in the command chain.  The first user in this sequence
     * is the one who instigated the first command in the chain.
     *
     * Generated from protobuf field <code>repeated string users = 2;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setUsers($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->users = $arr;

        return $this;
    }

    /**
     * Labels to categorize this invocation.
     * This is implemented as a set. All labels will be unique. Any duplicate
     * labels added will be ignored. Labels will be returned in lexicographical
     * order. Labels should be short, easy to read, and you
     * shouldn't have more than a handful.
     * Labels should match regex \w([- \w]*\w)?
     * Labels should not be used for unique properties such as unique IDs.
     * Use properties in cases that don't meet these conditions.
     *
     * Generated from protobuf field <code>repeated string labels = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getLabels()
    {
        return $this->labels;
    }

    /**
     * Labels to categorize this invocation.
     * This is implemented as a set. All labels will be unique. Any duplicate
     * labels added will be ignored. Labels will be returned in lexicographical
     * order. Labels should be short, easy to read, and you
     * shouldn't have more than a handful.
     * Labels should match regex \w([- \w]*\w)?
     * Labels should not be used for unique properties such as unique IDs.
     * Use properties in cases that don't meet these conditions.
     *
     * Generated from protobuf field <code>repeated string labels = 3;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setLabels($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->labels = $arr;

        return $this;
    }

}

