<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/resultstore/v2/test_suite.proto

namespace Google\Devtools\Resultstore\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Represents a violated assertion, as reported in a <failure> element within a
 * <testcase>. Some languages allow assertions to be made without stopping the
 * test case when they're violated, leading to multiple TestFailures. For Java,
 * multiple TestFailures are used to represent a chained exception.
 *
 * Generated from protobuf message <code>google.devtools.resultstore.v2.TestFailure</code>
 */
class TestFailure extends \Google\Protobuf\Internal\Message
{
    /**
     * The exception message reported in the message attribute. Typically short,
     * but may be multi-line. Eg. "Expected 'foo' but was 'bar'".
     *
     * Generated from protobuf field <code>string failure_message = 1;</code>
     */
    private $failure_message = '';
    /**
     * The type of the exception being thrown, reported in the type attribute.
     * Eg: "org.junit.ComparisonFailure"
     *
     * Generated from protobuf field <code>string exception_type = 2;</code>
     */
    private $exception_type = '';
    /**
     * The stack trace reported as the content of the <failure> element, often in
     * a CDATA block. This contains one line for each stack frame, each including
     * a method/function name, a class/file name, and a line number. Most recent
     * call is usually first, but not for Python stack traces. May contain the
     * exception_type and message.
     *
     * Generated from protobuf field <code>string stack_trace = 3;</code>
     */
    private $stack_trace = '';

    public function __construct() {
        \GPBMetadata\Google\Devtools\Resultstore\V2\TestSuite::initOnce();
        parent::__construct();
    }

    /**
     * The exception message reported in the message attribute. Typically short,
     * but may be multi-line. Eg. "Expected 'foo' but was 'bar'".
     *
     * Generated from protobuf field <code>string failure_message = 1;</code>
     * @return string
     */
    public function getFailureMessage()
    {
        return $this->failure_message;
    }

    /**
     * The exception message reported in the message attribute. Typically short,
     * but may be multi-line. Eg. "Expected 'foo' but was 'bar'".
     *
     * Generated from protobuf field <code>string failure_message = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setFailureMessage($var)
    {
        GPBUtil::checkString($var, True);
        $this->failure_message = $var;

        return $this;
    }

    /**
     * The type of the exception being thrown, reported in the type attribute.
     * Eg: "org.junit.ComparisonFailure"
     *
     * Generated from protobuf field <code>string exception_type = 2;</code>
     * @return string
     */
    public function getExceptionType()
    {
        return $this->exception_type;
    }

    /**
     * The type of the exception being thrown, reported in the type attribute.
     * Eg: "org.junit.ComparisonFailure"
     *
     * Generated from protobuf field <code>string exception_type = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setExceptionType($var)
    {
        GPBUtil::checkString($var, True);
        $this->exception_type = $var;

        return $this;
    }

    /**
     * The stack trace reported as the content of the <failure> element, often in
     * a CDATA block. This contains one line for each stack frame, each including
     * a method/function name, a class/file name, and a line number. Most recent
     * call is usually first, but not for Python stack traces. May contain the
     * exception_type and message.
     *
     * Generated from protobuf field <code>string stack_trace = 3;</code>
     * @return string
     */
    public function getStackTrace()
    {
        return $this->stack_trace;
    }

    /**
     * The stack trace reported as the content of the <failure> element, often in
     * a CDATA block. This contains one line for each stack frame, each including
     * a method/function name, a class/file name, and a line number. Most recent
     * call is usually first, but not for Python stack traces. May contain the
     * exception_type and message.
     *
     * Generated from protobuf field <code>string stack_trace = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setStackTrace($var)
    {
        GPBUtil::checkString($var, True);
        $this->stack_trace = $var;

        return $this;
    }

}

